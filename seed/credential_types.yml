---
controller_credential_types:
  - name: ssh_priv_file
    kind: cloud
    description: creates temp ssh priv key to use (cannot have passphrase)
    inputs:
      fields:
        - id: priv_key
          type: string
          label: Certificate
          format: ssh_private_key
          multiline: true
          secret: true
    injectors:
      env:
        MY_CERT_FILE_PATH: !unsafe '{{ tower.filename.cert_file }}'
      file:
        template.cert_file: !unsafe '{{ priv_key }}'

  - name: Registry Credentials
    input:
      fields:
        - id: base_registery_username
          type: string
          label: base_registery_username
        - id: base_registery_password
          type: string
          label: base_registery_password
          secret: true
        - id: ee_registry_username
          type: string
          label: ee_registry_username
        - id: ee_registry_password
          type: string
          label: ee_registry_password
          secret: true
        - id: ee_validate_certs
          type: boolean
          label: ee_validate_certs
        - id: ah_host
          type: string
          label: ah_host
        - id: ah_token
          type: string
          label: ah_token
          secret: true
      required:
        - base_registery_username
        - base_registery_password
        - ee_registry_username
        - ee_registry_password
        - ee_validate_certs
        - ah_host
        - ah_token


...
